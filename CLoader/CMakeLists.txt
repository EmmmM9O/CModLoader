cmake_minimum_required(VERSION 3.0.0)
project(CLoader VERSION 0.1.0)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++20")
include(CTest)
enable_testing()
#set(Boost_USE_STATIC_LIBS ON) # 如果是静态库，设置为 ON
add_definitions(-DBOOST_ALL_NO_LIB)
set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_SOURCE_DIR}/lib )
set( CMAKE_LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_SOURCE_DIR}/lib )
set( CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_SOURCE_DIR}/bin )
set(CMAKE_PREFIX_PATH "/usr/local/" ${CMAKE_PREFIX_PATH})
find_package(PkgConfig REQUIRED)
pkg_search_module(LibZip REQUIRED libzip)
#pkg_search_module(BOOST REQUIRED system filesystem)
find_package(Boost COMPONENTS system REQUIRED)
include_directories(${Boost_INCLUDE_DIRS})
find_package(Boost COMPONENTS system filesystem REQUIRED)
add_library(CLoader src/main.cpp)
target_link_libraries(CLoader ${LibZip_LIBRARIES} boost_system boost_filesystem)
target_include_directories(CLoader PRIVATE ${LibZip_INCLUDE_DIRS})
target_link_libraries(CLoader ${BOOST_LIBRARIES})
add_executable(CLoaderTest src/main.cpp)
target_link_libraries(CLoaderTest ${LibZip_LIBRARIES})
target_include_directories(CLoaderTest PRIVATE ${LibZip_INCLUDE_DIRS})
target_link_libraries(CLoaderTest ${BOOST_LIBRARIES} boost_system boost_filesystem)
#target_link_libraries(CLoaderTest LibZip::LibZip)
set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)
